<?php

namespace App\Enums\Game;

enum JobEnum: int
{
    case Novice = 0;
    case Swordman = 1;
    case Magician = 2;
    case Archer = 3;
    case Acolyte = 4;
    case Merchant = 5;
    case Thief = 6;
    case Knight = 7;
    case Priest = 8;
    case Wizard = 9;
    case Blacksmith = 10;
    case Hunter = 11;
    case Assassin = 12;
    case Crusader = 14;
    case Monk = 15;
    case Sage = 16;
    case Rogue = 17;
    case Alchemist = 18;
    case Bard = 19;
    case Dancer = 20;
    case Novice_High = 4001;
    case Swordman_High = 4002;
    case Magician_High = 4003;
    case Archer_High = 4004;
    case Acolyte_High = 4005;
    case Merchant_High = 4006;
    case Thief_High = 4007;
    case Lord_Knight = 4008;
    case High_Priest = 4009;
    case High_Wizard = 4010;
    case Whitesmith = 4011;
    case Sniper = 4012;
    case Assassin_Cross = 4013;
    case Paladin = 4015;
    case Champion = 4016;
    case Professor = 4017;
    case Stalker = 4018;
    case Creator = 4019;
    case Clown = 4020;
    case Gypsy = 4021;
    case Rune_Knight = 4054;
    case Warlock = 4055;
    case Ranger = 4056;
    case Arch_Bishop = 4057;
    case Mechanic = 4058;
    case Guillotine_Cross = 4059;
    case Royal_Guard = 4066;
    case Sorcerer = 4067;
    case Minstrel = 4068;
    case Wanderer = 4069;
    case Sura = 4070;
    case Genetic = 4071;
    case Shadow_Chaser = 4072;
    case T_Rune_Knight = 4060;
    case T_Warlock = 4061;
    case T_Ranger = 4062;
    case T_Arch_Bishop = 4063;
    case T_Mechanic = 4064;
    case T_Guillotine_Cross = 4065;
    case T_Royal_Guard = 4073;
    case T_Sorcerer = 4074;
    case T_Minstrel = 4075;
    case T_Wanderer = 4076;
    case T_Sura = 4077;
    case T_Genetic = 4078;
    case T_Shadow_Chaser = 4079;
    case Dragon_Knight = 4252;
    case Meister = 4253;
    case Shadow_Cross = 4254;
    case Arch_Mage = 4255;
    case Cardinal = 4256;
    case Windhawk = 4257;
    case Imperial_Guard = 4258;
    case Biolo = 4259;
    case Abyss_Chaser = 4260;
    case Elemental_Master_4262_Inquisitor = 4261;
    case Troubadour = 4263;
    case Trouvere = 4264;
    case Super_Novice = 23;
    case Gunslinger = 24;
    case Ninja = 25;
    case Super_Baby = 4045;
    case Taekwon = 4046;
    case Star_Gladiator = 4047;
    case Soul_Linker = 4049;
    case Ex_Super_Novice = 4190;
    case Ex_Super_Baby = 4191;
    case Kagerou = 4211;
    case Oboro = 4212;
    case Rebellion = 4215;
    case Summoner = 4218;
    case Star_Emperor = 4239;
    case Soul_Reaper = 4240;
    case Sky_Emperor = 4302;
    case Soul_Ascetic = 4303;
    case Shinkiro = 4304;
    case Shiranui = 4305;
    case Night_Watch = 4306;
    case Hyper_Novice = 4307;
    case Spirit_Handler = 4308;
    case Baby_Novice = 4023;
    case Baby_Swordman = 4024;
    case Baby_Magician = 4025;
    case Baby_Archer = 4026;
    case Baby_Acolyte = 4027;
    case Baby_Merchant = 4028;
    case Baby_Thief = 4029;
    case Baby_Knight = 4030;
    case Baby_Priest = 4031;
    case Baby_Wizard = 4032;
    case Baby_Blacksmith = 4033;
    case Baby_Hunter = 4034;
    case Baby_Assassin = 4035;
    case Baby_Crusader = 4037;
    case Baby_Monk = 4038;
    case Baby_Sage = 4039;
    case Baby_Rogue = 4040;
    case Baby_Alchemist = 4041;
    case Baby_Bard = 4042;
    case Baby_Dancer = 4043;
    case Baby_Rune_Knight = 4096;
    case Baby_Warlock = 4097;
    case Baby_Ranger = 4098;
    case Baby_Arch_Bishop = 4099;
    case Baby_Mechanic = 4100;
    case Baby_Glt_Cross = 4101;
    case Baby_Royal_Guard = 4102;
    case Baby_Sorcerer = 4103;
    case Baby_Minstrel = 4104;
    case Baby_Wanderer = 4105;
    case Baby_Sura = 4106;
    case Baby_Genetic = 4107;
    case Baby_Shadow_Chaser = 4108;
    case Baby_Summoner = 4220;
    case Baby_Ninja = 4222;
    case Baby_Kagero = 4223;
    case Baby_Oboro = 4224;
    case Baby_Taekwon = 4225;
    case Baby_Star_Glad = 4226;
    case Baby_Soul_Linker = 4227;
    case Baby_Gunslinger = 4228;
    case Baby_Rebellion = 4229;
    case Baby_Star_Emperor = 4241;
    case Baby_Soul_Reaper = 4242;

    public function getName(): string
    {
        return str_replace('_', ' ', $this->name);
    }
}
